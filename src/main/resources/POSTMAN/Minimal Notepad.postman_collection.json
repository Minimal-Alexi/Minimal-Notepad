{
	"info": {
		"_postman_id": "dfe167dd-612b-4c6a-a18f-f545da6d25c7",
		"name": "Minimal Notepad",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37897491"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Login Request",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test\",\r\n    \"password\":\"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users-authentication/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users-authentication",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Request",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"sjackes0\",\"email\":\"tsherebrooke0@weebly.com\",\"password\":\"oC1|w9%+3G\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users-authentication/register",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users-authentication",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Account",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/user/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"user",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Account",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"FakeAccount\",\r\n    \"email\": \"Fake5@email.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/user/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"user",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Change User Password",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"oldPassword\": \"min\",\r\n    \"newPassword\": \"max\",\r\n    \"confirmPassword\": \"max\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/user/change-password",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"user",
								"change-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User Account",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/user/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"user",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Note",
			"item": [
				{
					"name": "Get User Notes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/note/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"note",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Note By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/note/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"note",
								""
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Note",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Dr\",\r\n    \"text\": \"Nullam sit amet turpis elementum ligula vehicula consequat. Morbi a ipsum. Integer a nibh.\\n\\nIn quis justo. Maecenas rhoncus aliquam lacus. Morbi quis tortor id nulla ultrices aliquet.\\n\\nMaecenas leo odio, condimentum id, luctus nec, molestie sed, justo. Pellentesque viverra pede ac diam. Cras pellentesque volutpat dui.\",\r\n    \"colour\": \"Yellow\",\r\n    \"figures\": [],\r\n    \"categoriesList\": [\r\n        {\r\n            \"id\": 2\r\n        },\r\n        {\r\n            \"id\": 1\r\n        },\r\n        {\r\n            \"id\": 3\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/note/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"note",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Note",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/note/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"note",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Note",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/api/note/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"note",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"quis turpis sed \",\r\n    \"notes\": [\r\n        {\r\n            \"title\": \"quis turpis sed ante\",\r\n            \"text\": \"Phasellus in felis. Donec semper sapien a libero. Nam dui.\\n\\nProin leo odio, porttitor id, consequat in, consequat ut, nulla. Sed accumsan felis. Ut at dolor quis odio consequat varius.\\n\\nInteger ac leo. Pellentesque ultrices mattis odio. Donec vitae nisi.\",\r\n            \"colour\": \"#f7474f\",\r\n            \"figures\": [\r\n                {\r\n                    \"link\": \"http://dummyimage.com/202x164.png/ff4444/ffffff\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/103x152.png/cc0000/ffffff\"\r\n                }\r\n            ],\r\n            \"categoriesList\": [\r\n                {\r\n                    \"id\": 1\r\n                },\r\n                {\r\n                    \"id\": 2\r\n                },\r\n                {\r\n                    \"id\": 3\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"title\": \"quis turpis sed 2\",\r\n            \"text\": \"Fusce consequat. Nulla nisl. Nunc nisl.\\n\\nDuis bibendum, felis sed interdum venenatis, turpis enim blandit mi, in porttitor pede justo eu massa. Donec dapibus. Duis at velit eu est congue elementum.\",\r\n            \"colour\": \"#cd83c5\",\r\n            \"figures\": [\r\n                {\r\n                    \"link\": \"http://dummyimage.com/230x219.png/dddddd/000000\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/144x108.png/ff4444/ffffff\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/194x164.png/ff4444/ffffff\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/134x136.png/dddddd/000000\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/101x115.png/dddddd/000000\"\r\n                }\r\n            ],\r\n            \"categoriesList\": []\r\n        },\r\n        {\r\n            \"title\": \"a ipsum integer a\",\r\n            \"text\": \"Cras non velit nec nisi vulputate nonummy. Maecenas tincidunt lacus at velit. Vivamus vel nulla eget eros elementum pellentesque.\",\r\n            \"colour\": \"#577e60\",\r\n            \"figures\": [\r\n                {\r\n                    \"link\": \"http://dummyimage.com/106x174.png/dddddd/000000\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/153x141.png/5fa2dd/ffffff\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/130x191.png/cc0000/ffffff\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/161x250.png/dddddd/000000\"\r\n                }\r\n            ],\r\n            \"categoriesList\": [\r\n                {\r\n                    \"id\": 1\r\n                },\r\n                {\r\n                    \"id\": 2\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"title\": \"lectus vestibulum\",\r\n            \"text\": \"Aenean lectus. Pellentesque eget nunc. Donec quis orci eget orci vehicula condimentum.\\n\\nCurabitur in libero ut massa volutpat convallis. Morbi odio odio, elementum eu, interdum eu, tincidunt in, leo. Maecenas pulvinar lobortis est.\",\r\n            \"colour\": \"#6debc9\",\r\n            \"figures\": [\r\n                {\r\n                    \"link\": \"http://dummyimage.com/112x135.png/dddddd/000000\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/175x216.png/5fa2dd/ffffff\"\r\n                }\r\n            ],\r\n            \"categoriesList\": []\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/note/search",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"note",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Filter",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"category\": {\"id\":1},\r\n    \"notes\": [\r\n        {\r\n            \"title\": \"quis turpis sed ante\",\r\n            \"text\": \"Phasellus in felis. Donec semper sapien a libero. Nam dui.\\n\\nProin leo odio, porttitor id, consequat in, consequat ut, nulla. Sed accumsan felis. Ut at dolor quis odio consequat varius.\\n\\nInteger ac leo. Pellentesque ultrices mattis odio. Donec vitae nisi.\",\r\n            \"colour\": \"#f7474f\",\r\n            \"figures\": [\r\n                {\r\n                    \"link\": \"http://dummyimage.com/202x164.png/ff4444/ffffff\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/103x152.png/cc0000/ffffff\"\r\n                }\r\n            ],\r\n            \"categoriesList\": [\r\n                {\r\n                    \"id\": 1\r\n                },\r\n                {\r\n                    \"id\": 2\r\n                },\r\n                {\r\n                    \"id\": 3\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"title\": \"quis turpis sed 2\",\r\n            \"text\": \"Fusce consequat. Nulla nisl. Nunc nisl.\\n\\nDuis bibendum, felis sed interdum venenatis, turpis enim blandit mi, in porttitor pede justo eu massa. Donec dapibus. Duis at velit eu est congue elementum.\",\r\n            \"colour\": \"#cd83c5\",\r\n            \"figures\": [\r\n                {\r\n                    \"link\": \"http://dummyimage.com/230x219.png/dddddd/000000\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/144x108.png/ff4444/ffffff\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/194x164.png/ff4444/ffffff\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/134x136.png/dddddd/000000\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/101x115.png/dddddd/000000\"\r\n                }\r\n            ],\r\n            \"categoriesList\": []\r\n        },\r\n        {\r\n            \"title\": \"a ipsum integer a\",\r\n            \"text\": \"Cras non velit nec nisi vulputate nonummy. Maecenas tincidunt lacus at velit. Vivamus vel nulla eget eros elementum pellentesque.\",\r\n            \"colour\": \"#577e60\",\r\n            \"figures\": [\r\n                {\r\n                    \"link\": \"http://dummyimage.com/106x174.png/dddddd/000000\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/153x141.png/5fa2dd/ffffff\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/130x191.png/cc0000/ffffff\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/161x250.png/dddddd/000000\"\r\n                }\r\n            ],\r\n            \"categoriesList\": [\r\n                {\r\n                    \"id\": 1\r\n                },\r\n                {\r\n                    \"id\": 2\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"title\": \"lectus vestibulum\",\r\n            \"text\": \"Aenean lectus. Pellentesque eget nunc. Donec quis orci eget orci vehicula condimentum.\\n\\nCurabitur in libero ut massa volutpat convallis. Morbi odio odio, elementum eu, interdum eu, tincidunt in, leo. Maecenas pulvinar lobortis est.\",\r\n            \"colour\": \"#6debc9\",\r\n            \"figures\": [\r\n                {\r\n                    \"link\": \"http://dummyimage.com/112x135.png/dddddd/000000\"\r\n                },\r\n                {\r\n                    \"link\": \"http://dummyimage.com/175x216.png/5fa2dd/ffffff\"\r\n                }\r\n            ],\r\n            \"categoriesList\": []\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/note/filter",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"note",
								"filter"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Group",
			"item": [
				{
					"name": "Get all groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/groups/all",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"groups",
								"all"
							],
							"query": [
								{
									"key": "Authorization",
									"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0IiwiaWF0IjoxNzM4NTgyMTE1LCJleHAiOjE3Mzg2Njg1MTV9.Z3-VmoNnVK1sDbzvJuYACdksbFEOVbP5Fc2CurW645I",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get own+joined groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/groups/my-groups",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"groups",
								"my-groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get available to join groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/groups/available",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"groups",
								"available"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get group by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/groups/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"groups",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Friends\",\n    \"description\": \"Private group for friends' activities.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/groups",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"groups"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test\",\n    \"description\": \"Updated description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/groups/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"groups",
								"3"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Delete group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/groups/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"groups",
								"4"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Join group",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/api/groups/8/join",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"groups",
								"8",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "Leave group",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/groups/2/leave",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"groups",
								"2",
								"leave"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "Get all categories",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories"
							],
							"query": [
								{
									"key": "Authorization",
									"value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0IiwiaWF0IjoxNzM4NTgyMTE1LCJleHAiOjE3Mzg2Njg1MTV9.Z3-VmoNnVK1sDbzvJuYACdksbFEOVbP5Fc2CurW645I",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get category by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/groups/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"groups",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"imperdiet\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test\",\n    \"description\": \"Updated description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/categories/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories",
								"3"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Delete category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/categories/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"categories",
								"3"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0IiwiaWF0IjoxNzQwMzk2NDIwLCJleHAiOjE3NDA0ODI4MjB9.V7hbJBkLDBlUkg3cUkW12OdIzyyLWDcCl79S1Mgdvp8",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:8093"
		}
	]
}